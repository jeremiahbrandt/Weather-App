{"version":3,"sources":["components/WeatherApp/Period/HalfPeriod/Location.js","components/WeatherApp/Period/HalfPeriod/Title.js","components/WeatherApp/HourTime.js","components/WeatherApp/HourlyTemperature.js","components/WeatherApp/Hour.js","components/WeatherApp/HourIcon.js","components/WeatherApp/HourShortForecast.js","components/WeatherApp/HourGroup.js","components/WeatherApp/IndividualPeriod.js","components/WeatherApp/Period/HalfPeriod/Icon.js","components/WeatherApp/Period/HalfPeriod/Forecast.js","components/WeatherApp/Period/HalfPeriod/Temperature.js","components/WeatherApp/Period/HalfPeriod/Wind/Direction.js","components/WeatherApp/Period/HalfPeriod/Wind/Speed.js","components/WeatherApp/Period/HalfPeriod/Wind.js","components/WeatherApp/Period/HalfPeriod.js","components/WeatherApp/Date.js","components/WeatherApp/Period.js","components/WeatherApp/Search.js","components/WeatherApp.js","App.js","serviceWorker.js","index.js"],"names":["Location","className","this","props","city","state","React","Component","Title","title","HourTime","time","HourlyTemperature","temperature","Hour","icon","shortForecast","timeIndex","indexOf","substring","style","width","alt","HourGroup","hours","map","currHour","key","startTime","IndividualPeriod","forecast","date","Icon","src","url","Forecast","Temperature","WindDirection","direction","WindSpeed","speed","Wind","HalfPeriod","data","name","windDirection","windSpeed","isDaytime","Date","Period","halfPeriods","currHalfPeriod","number","Search","handleInput","bind","handleSearch","input","e","setState","target","value","type","onChange","placeholder","onClick","WeatherApp","fetchWeatherData","resizePeriods","handleDataLoading","handleSevenDayForecast","handleHourlyForecast","isLoaded","location","defaultLocation","showIndividualDay","hourlyForecastIsLoad","lat","lng","coordinates","console","log","fetch","then","reponse","json","properties","relativeLocation","response","periods","forecastHourly","sevenDayForecast","i","currDay","currNight","currPeriod","push","days","parseInt","hourlyForecast","URL","replace","results","geometry","periodTitles","document","getElementsByClassName","maxPeriodTitlesHeight","length","currPeriodTitlesHeight","item","clientHeight","height","maxDayHeight","currDayHeight","nights","maxNightHeight","currNightHeight","currForecast","App","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.df04a702.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Location extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='location'>\r\n                {this.props.city ? this.props.city + ', ' : 'Loading...'}\r\n                {this.props.state ? this.props.state : ''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Location","import React from 'react'\r\n\r\nclass Title extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='title'>\r\n                {this.props.title}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title","import React from 'react'\r\n\r\nclass HourTime extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='hourTime'>\r\n                {this.props.time ? this.props.time : 'HOUR TIME'}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HourTime","import React from 'react'\r\n\r\nclass HourlyTemperature extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='hourlyTemperature'>\r\n                {this.props.temperature ? this.props.temperature +  ' °F' : 'HOURLY TEMPERATURE'}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HourlyTemperature","import React from 'react'\r\n\r\nimport HourTime from './HourTime'\r\nimport HourlyTemperature from './HourlyTemperature'\r\nimport HourIcon from './HourIcon'\r\nimport HourShortForecast from './HourShortForecast'\r\n\r\nclass Hour extends React.Component {\r\n    render() {\r\n        const style={width:'120px'}\r\n        const {icon, temperature, shortForecast} = this.props\r\n        const timeIndex = this.props.time.indexOf(\"T\")\r\n        const time = this.props.time.substring(timeIndex+1, timeIndex+3) + '00'\r\n        return(\r\n            <div className='col hour' style={style}>\r\n                <HourTime time={time} />\r\n{/*                 <HourIcon icon={icon} />\r\n */}                <HourlyTemperature temperature={temperature} alt={shortForecast} />\r\n{/*                 <HourShortForecast shortForecast={shortForecast} />\r\n */}            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hour","import React from 'react'\r\n\r\nclass HourIcon extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='hourIcon'>\r\n                <img src={this.props.icon} alt={this.props.alt} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HourIcon","import React from 'react'\r\n\r\nclass HourShortForecast extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='hourShortForecast'>\r\n                {this.props.shortForecast}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HourShortForecast","import React from 'react'\r\n\r\nimport Hour from './Hour'\r\n\r\nclass HourGroup extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='hourGroup'>\r\n                {this.props.hours \r\n                    ? this.props.hours.map((currHour) => \r\n                        <Hour \r\n                            key={currHour.startTime}\r\n                            time={currHour.startTime} \r\n                            icon={currHour.icon}\r\n                            temperature={currHour.temperature}\r\n                            shortForecast={currHour.shortForecast}\r\n                        />\r\n                    )\r\n                    : ''\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HourGroup","import React from 'react'\r\nimport Title from './Period/HalfPeriod/Title'\r\nimport HourGroup from './HourGroup'\r\n\r\nclass IndividualPeriod extends React.Component {\r\n    render() {\r\n        const {date, hours} = this.props.forecast\r\n\r\n        return(\r\n            <div className='individualPeriod'>\r\n                <Title title={date} />\r\n                <HourGroup hours={hours} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndividualPeriod","import React from 'react'\r\n\r\nclass Icon extends React.Component {\r\n    render() {\r\n        return(\r\n            <img src={this.props.url} alt={this.props.alt}  className='icon' />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Icon","import React from 'react'\r\n\r\nclass Forecast extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='forecast'>\r\n                {this.props.forecast ? this.props.forecast : 'FORECAST'}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Forecast","import React from 'react'\r\n\r\nclass Temperature extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='temperature'>\r\n                {this.props.temperature ? this.props.temperature + ' F' : \"TEMPERATURE\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Temperature","import React from 'react'\r\n\r\nclass WindDirection extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='windDirection'>\r\n                {this.props.direction ? this.props.direction : 'WIND DIRECTION'}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WindDirection","import React from 'react'\r\n\r\nclass WindSpeed extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='windSpeed'>\r\n                {this.props.speed ? this.props.speed : 'SPEED'}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WindSpeed","import React from 'react'\r\nimport WindDirection from './Wind/Direction'\r\nimport WindSpeed from './Wind/Speed'\r\n\r\nclass Wind extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='wind'>\r\n                <WindDirection direction={this.props.direction} />\r\n                <WindSpeed speed={this.props.speed} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wind","import React from 'react'\r\nimport Title from './HalfPeriod/Title'\r\nimport Icon from './HalfPeriod/Icon'\r\nimport Forecast from './HalfPeriod/Forecast'\r\nimport Temperature from './HalfPeriod/Temperature'\r\nimport Wind from './HalfPeriod/Wind'\r\n\r\nclass HalfPeriod extends React.Component {\r\n    render() {\r\n        //Variables\r\n        const {name, icon, shortForecast, temperature, windDirection, windSpeed, isDaytime} = this.props.data\r\n\r\n        //Sets class to day or night\r\n        let className = 'halfPeriod'\r\n        isDaytime ? className+=' day' : className+=' night'\r\n\r\n        return(\r\n            <div className={className}>\r\n                <Title title={name} />\r\n                <Icon url={icon} alt={shortForecast} />\r\n                <div className='forecastData'>\r\n                    <Forecast forecast={shortForecast} />\r\n                    <Temperature temperature={temperature} />\r\n                    <Wind direction={windDirection} speed={windSpeed} /> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HalfPeriod","import React from 'react'\r\n\r\nclass Date extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='date'>\r\n                {this.props.date ? this.props.date : 'DATE'}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Date","import React from 'react'\r\nimport HalfPeriod from './Period/HalfPeriod'\r\nimport Date from './Date'\r\n\r\nclass Period extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='period'>\r\n                {/* Date */}\r\n                <Date \r\n                    date={this.props.date}\r\n                />\r\n                        \r\n                {/* Half Periods */}\r\n                {this.props.halfPeriods.map(currHalfPeriod =>\r\n                    <HalfPeriod \r\n                        data={currHalfPeriod}\r\n                        key={currHalfPeriod.number}\r\n                    />\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Period","import React from 'react'\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleInput = this.handleInput.bind(this)\r\n        this.handleSearch = this.handleSearch.bind(this)\r\n        this.state = {\r\n            input: ''\r\n        }\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({input:e.target.value})\r\n    }\r\n\r\n    handleSearch() {\r\n        this.props.handleSearch(this.state.input)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            // Changed type from form to div because form was causing WeatherApp to re-render\r\n            <div className='search' /* onSubmit={this.handleSearch} */>\r\n                <input \r\n                    className='searchInput'\r\n                    type='text' \r\n                    onChange={this.handleInput}\r\n                    placeholder='City or Zip Code'\r\n                />\r\n                <input type='submit' className='searchButton' onClick={this.handleSearch} value='Search' />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React from 'react'\r\n\r\nimport Location from './WeatherApp/Period/HalfPeriod/Location'\r\nimport IndividualPeriod from './WeatherApp/IndividualPeriod'\r\nimport Period from './WeatherApp/Period'\r\nimport Search from './WeatherApp/Search'\r\n\r\nconst dummyHourlyForecast = [\r\n    {\r\n        title: {\r\n            name: 'Sunday',\r\n            date: 'March 1, 2020',\r\n        },\r\n        hourlyForecast: [\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0100',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0200',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0300',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0400',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0500',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0600',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0700',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: {\r\n            name: 'Monday',\r\n            date: 'March 2, 2020',\r\n        },\r\n        hourlyForecast: [\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0100',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0200',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0300',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0400',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0500',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0600',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0700',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n            {\r\n                startTime: '0000',\r\n                temperature: 12,\r\n            },\r\n        ]\r\n    }\r\n]\r\n\r\nclass WeatherApp extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.fetchWeatherData = this.fetchWeatherData.bind(this)\r\n        this.resizePeriods = this.resizePeriods.bind(this)\r\n        this.handleSearch = this.handleSearch.bind(this)\r\n        this.handleDataLoading = this.handleDataLoading.bind(this)\r\n        this.handleSevenDayForecast = this.handleSevenDayForecast.bind(this)\r\n        this.handleHourlyForecast = this.handleHourlyForecast.bind(this)\r\n        this.state = {\r\n            isLoaded: false,\r\n            location: this.props.defaultLocation,\r\n            showIndividualDay: true,\r\n            hourlyForecastIsLoad: false,\r\n            lat: 39.0914657,\r\n            lng: -93.21044209999999,\r\n\r\n        }\r\n    }\r\n\r\n    //Fetches default API data after component mounts\r\n    componentDidMount() {\r\n        this.fetchWeatherData()\r\n    }\r\n    \r\n    //Fetches new API data when called\r\n     componentDidUpdate() {\r\n        !this.state.isLoaded \r\n            ? this.fetchWeatherData() \r\n            : this.resizePeriods()\r\n    } \r\n\r\n    //Fetches general data from nws.gov\r\n    fetchWeatherData() {\r\n        let coordinates = this.state.lat + ',' + this.state.lng\r\n        console.log('fetchWeatherData(' + coordinates + ')');\r\n        let url = 'https://api.weather.gov/points/' + coordinates\r\n        fetch(url)\r\n            .then(reponse => reponse.json())\r\n            .then(data => this.handleDataLoading(data))\r\n    }\r\n\r\n    //Uses loaded API data to create new day object for next 7 days\r\n    handleDataLoading(data) {\r\n        //Creates new location object passed to handleSevenDayForcast, used to setState\r\n        let location = {\r\n            city: data.properties.relativeLocation.properties.city,\r\n            state: data.properties.relativeLocation.properties.state\r\n        }\r\n        //Fetches general seven day forecast from URL in data.properties\r\n         fetch(data.properties.forecast)\r\n            .then(response => response.json())\r\n            .then(data => this.handleSevenDayForecast(data.properties.periods, location))\r\n\r\n        //Fetches hourly seven day forecast from URL in data.properties\r\n        fetch(data.properties.forecastHourly)\r\n            .then(response => response.json())\r\n            .then(data => this.handleHourlyForecast(data.properties.periods))\r\n    }\r\n\r\n    //Updates Forecast in State using location and periods\r\n    handleSevenDayForecast(periods, location) {\r\n        const sevenDayForecast = []\r\n\r\n        //Iterates through afternoon and night half periods to create a single day\r\n        for(let i=0; i<14; i+=2) {\r\n            const currDay = periods[i]\r\n            const currNight = periods[i+1]\r\n\r\n            const currDate = currDay.startTime.substring(0, 10)\r\n\r\n            const currPeriod = {\r\n                date: currDate,\r\n                halfPeriods: [\r\n                  currDay, currNight\r\n                ]\r\n            }\r\n            sevenDayForecast.push(currPeriod)\r\n        }\r\n\r\n        this.setState({\r\n            forecast: {\r\n                location: location,\r\n                sevenDayForecast: sevenDayForecast\r\n            },\r\n            isLoaded: true\r\n        })\r\n    }\r\n\r\n    //Handles hourly forcast\r\n    handleHourlyForecast(periods) {\r\n        let days = []\r\n        let hours = []\r\n\r\n        //Gets time of each hour\r\n        periods.map(currHour => {\r\n            const timeIndex = currHour.startTime.indexOf(\"T\")\r\n            const hourTime = parseInt(currHour.startTime.substring(timeIndex+1, timeIndex+3))\r\n\r\n            if(hourTime < 23) {\r\n                hours.push(currHour)\r\n            } else {\r\n                hours.push(currHour)\r\n\r\n                days.push({\r\n                    date: currHour.startTime.substring(0, timeIndex),\r\n                    hours: hours\r\n                })\r\n                hours = []\r\n            }\r\n        })\r\n        \r\n        this.setState({\r\n            hourlyForecast: days,\r\n            hourlyForecastIsLoad: true\r\n        })\r\n    }\r\n\r\n    //Updates location after search\r\n    handleSearch(value) {\r\n        let URL = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + value.replace(' ','+') + '&key=AIzaSyDqN67XiDvWTXoXyPNxPHW0VLqdUN2T2GU'\r\n        fetch(URL)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({isLoaded: false, location: value, lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng}))\r\n        }    \r\n\r\n    //Gets max heights and updates all other elements of same class\r\n    resizePeriods() {\r\n        //For period titles\r\n        let periodTitles = document.getElementsByClassName('periodTitle')\r\n        let maxPeriodTitlesHeight = 0\r\n        for(let i=0; i<periodTitles.length; i++) {\r\n            let currPeriodTitlesHeight = periodTitles.item(i).clientHeight\r\n            maxPeriodTitlesHeight = currPeriodTitlesHeight > maxPeriodTitlesHeight ? currPeriodTitlesHeight : maxPeriodTitlesHeight\r\n        }\r\n        for(let i=0; i<periodTitles.length; i++) {\r\n            periodTitles.item(i).style.height = maxPeriodTitlesHeight + 'px'\r\n        }\r\n\r\n        //For days\r\n        let days = document.getElementsByClassName('day')\r\n        let maxDayHeight = 0\r\n        for(let i=0; i<days.length; i++) {\r\n            let currDayHeight = days.item(i).clientHeight\r\n            maxDayHeight = currDayHeight > maxDayHeight ? currDayHeight : maxDayHeight\r\n        }\r\n        for(let i=0; i<days.length; i++) {\r\n            days.item(i).style.height = maxDayHeight + 'px'\r\n        }\r\n        \r\n        //For nights\r\n        let nights = document.getElementsByClassName('night')\r\n        let maxNightHeight = 0\r\n        for(let i=0; i<nights.length; i++) {\r\n            let currNightHeight = nights.item(i).clientHeight\r\n            maxNightHeight = currNightHeight > maxNightHeight ? currNightHeight : maxNightHeight\r\n        }\r\n        for(let i=0; i<nights.length; i++) {\r\n            nights.item(i).style.height = maxNightHeight + 'px'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //Initializes variables if API loads\r\n        const {city, state} = this.state.isLoaded ? this.state.forecast.location : ''\r\n        const {showIndividualDay, hourlyForecastIsLoad} = this.state\r\n        const {sevenDayForecast} = this.state.isLoaded ? this.state.forecast : ''\r\n\r\n        return(\r\n            <div className='weatherApp'>\r\n                {/* Seach */}\r\n                <div className='top'>\r\n                    <Search handleSearch={this.handleSearch} />\r\n\r\n                    {/* Location data */}\r\n                    <Location\r\n                        city={city}\r\n                        state={state}\r\n                    />\r\n                </div>\r\n\r\n                {/* Individual Day */}\r\n                {showIndividualDay && hourlyForecastIsLoad ? \r\n                    <IndividualPeriod  \r\n                        forecast={this.state.hourlyForecast[2]}\r\n                    /> \r\n                : ''}\r\n\r\n                {/* Forecast data */}\r\n                <div className='periods'>\r\n                {this.state.isLoaded ? sevenDayForecast.map(currForecast => \r\n                    <Period \r\n                        date={currForecast.date} \r\n                        halfPeriods={currForecast.halfPeriods}\r\n                        key={currForecast.date}\r\n                    />\r\n                ): ''}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherApp","import React from 'react';\r\nimport './css/style.css'\r\nimport WeatherApp from './components/WeatherApp'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <WeatherApp defaultLocation='39.7456,-97.0892' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}